# See for more details: https://docs.datadoghq.com/tracing/setup_overview/open_standards/#otlp-ingest-in-datadog-agent
# Run with following command: docker-compose -f docker-compose/datadog-docker-compose.yml up -d
# Stop with following command: docker-compose -f docker-compose/datadog-docker-compose.yml down
version: "3"
services:
  projects_service:
    image: projects_service
    container_name: projects_service
    hostname: projects_service
    restart: always
    networks:
      - tickets
    ports:
      - "10000:10000"

  postgres:
    image: postgres:14.1
    container_name: postgres
    hostname: postgres
    restart: always
    networks:
      - tickets
    environment:
      POSTGRES_DB: "tickets"
      POSTGRES_USER: tickets_user
      POSTGRES_PASSWORD: tickets_password
    ports:
      - "5432:5432"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    container_name: elasticsearch
    hostname: elasticsearch
    restart: always
    networks:
      - tickets
    environment:
      - "xpack.security.enabled=false"
      - "discovery.type=single-node"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    hostname: zookeeper
    networks:
      - tickets
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka-1:
    image: confluentinc/cp-enterprise-kafka:7.0.1
    hostname: kafka-1
    networks:
      - tickets
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 101
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092
      KAFKA_MIN_INSYNC_REPLICAS: 1
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  kafka-2:
    image: confluentinc/cp-enterprise-kafka:7.0.1
    hostname: kafka-2
    networks:
      - tickets
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 102
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9093
      KAFKA_MIN_INSYNC_REPLICAS: 1
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  opentelemetry-collector-contrib:
    build: ../docker-opentelemetry-collector-contrib
    container_name: opentelemetry-collector-contrib
    hostname: opentelemetry-collector-contrib
    restart: always
    command: ["--config=/etc/otel-collector-config.yaml"]
    networks:
      - tickets
    ports:
      - "4317:4317"
      - "9411:9411"
      - "14250:14250"
      - "14268:14268"
      - "6831:6831"
      - "55680:55680"
      - "55681:55681"

  tickets_service:
    image: tickets_service_otel
    container_name: tickets_service_otel
    hostname: tickets_service
    restart: always
    environment:
      - OTEL_SERVICE_NAME=tickets_service
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_METRICS_EXPORTER=otlp
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://opentelemetry-collector-contrib:4317
      - APPLICATION_ELASTICSEARCH_URL=http://elasticsearch:9200
      - APPLICATION_POSTGRE_URL=jdbc:postgresql://postgres:5432/tickets?user=tickets_user&password=tickets_password
      - APPLICATION_POSTGRE_HOST=postgres
      - APPLICATION_KAFKA_URL=kafka-1:9092
      - APPLICATION_PROJECTS_URL=http://projects_service:10000
    networks:
      - tickets
    ports:
      - "10001:10001"
    depends_on:
      - projects_service
      - postgres
      - elasticsearch
      - zookeeper
      - kafka-1
      - kafka-2
      - opentelemetry-collector-contrib

networks:
  tickets: